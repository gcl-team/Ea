-Version 2.3.1
1. Include Histogram and Percentile methods in HourCounter, to facilitate the statistics on the distribution of the observed count
2. Differentiate "Utilization" (when the load is being processed by the server) and "Occupation" (when the load is occupying server's capacity, i.e., both being served and stucked) for the server statistics.

- Version 2.3.0
1. Revise Queue and Server for higher modularity, and comply with DEVS standards.
2. Temporarily remove FIFOServer, Resource, RestoreServer, and PathMover, due to unstable performance.
3. Include Synchronizer, that checks multiple conditions and triggers events when all conditions are satisfied or unsatisfied.
4. Modify "Utilization" of Server / RestoreServer by excluding those processed but not departed; instead add "Occupation" for the the inclusive counting.
5. Rename "Status" as "State" to be consistent with most simulation literature.

- Version 2.2.1
1. Change font-size for Path label for displaying dense path network
2. Add X, Y, Rotate transform to Path SVG description

- Verssion 2.2.0
1. In Depart() event of Server, instead of checking the first load in the Served list (and continue only if the first is departed), all loads will be screened for ToDepart condition and depart if respective condition is satisfied.
2. Implement FIFO Server, as for modelling PathMover system
3. Add NCoccupied as dynamic property of Server / RestoreServer / FIFOServer, for easy call.
4. Add StartTimes and FinishTimes in Server, for Loads occupying the Server
5. WriteToConsole method of Status / Component may take in clockTime:DateTime parameter, as need for determining position of vehicles in PathMover
6. Include PathMover

- Version 2.1.2
Allows Load to have Static properties as "Category", considering it's a special type of Component that have life cycles in simulation.
Rename Static property of a normal Component as "Config".
Therefore, they coincide with Statics of a Simulation as "Scenario".

- Version 2.1.1
Simplifies structure of Component definition, by encapsulate StaticProperty based on root class, i.e., Component<TStatics> : Component.

- Version 2.1.0
1. Remove TScenario and TStatus in Component paradigm
2. Construct Simulator by Assembly (Component)
3. Demo for the two revision above